// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package sqlcgen

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
	"github.com/shopspring/decimal"
)

type Querier interface {
	AddIdentity(ctx context.Context, arg AddIdentityParams) (Identity, error)
	AdjustLedger(ctx context.Context, arg AdjustLedgerParams) (Ledger, error)
	CreateAccount(ctx context.Context, arg CreateAccountParams) (Account, error)
	CreateBankAccount(ctx context.Context, arg CreateBankAccountParams) (BankAccount, error)
	CreateBudget(ctx context.Context, arg CreateBudgetParams) (Budget, error)
	CreateLedger(ctx context.Context, arg CreateLedgerParams) (Ledger, error)
	CreateRecurringTransaction(ctx context.Context, arg CreateRecurringTransactionParams) (RecurringTransaction, error)
	CreateReminder(ctx context.Context, arg CreateReminderParams) (Reminder, error)
	CreateUser(ctx context.Context, arg CreateUserParams) (User, error)
	DeactivateAccountByID(ctx context.Context, arg DeactivateAccountByIDParams) (Account, error)
	DeactivateUserByID(ctx context.Context, id int32) (User, error)
	DeleteAccount(ctx context.Context, id int32) (Account, error)
	DeleteBankAccount(ctx context.Context, id int32) (BankAccount, error)
	DeleteBudget(ctx context.Context, id int32) error
	DeleteIdentity(ctx context.Context, arg DeleteIdentityParams) (Identity, error)
	DeleteLedger(ctx context.Context, id int32) (Ledger, error)
	DeleteRecurringTransaction(ctx context.Context, id int32) (RecurringTransaction, error)
	DeleteReminder(ctx context.Context, id int32) (Reminder, error)
	DeleteUser(ctx context.Context, id int32) (User, error)
	GetAccountByID(ctx context.Context, id int32) (Account, error)
	GetAccountsByUserID(ctx context.Context, userID int32) ([]Account, error)
	GetActiveBudgetByUserIDCategoryAndPeriod(ctx context.Context, arg GetActiveBudgetByUserIDCategoryAndPeriodParams) (Budget, error)
	GetActiveBudgetsByUserID(ctx context.Context, userID int32) ([]Budget, error)
	GetActiveRecurringTransactionsDue(ctx context.Context, nextDue pgtype.Timestamptz) ([]RecurringTransaction, error)
	GetActiveRemindersByUserID(ctx context.Context, arg GetActiveRemindersByUserIDParams) ([]Reminder, error)
	GetAllAccounts(ctx context.Context) ([]Account, error)
	GetAllUsers(ctx context.Context) ([]User, error)
	GetBankAccountByAccountID(ctx context.Context, accountID int32) (BankAccount, error)
	GetBankAccountByID(ctx context.Context, id int32) (BankAccount, error)
	GetBudgetByID(ctx context.Context, id int32) (Budget, error)
	GetBudgetsByUserID(ctx context.Context, userID int32) ([]Budget, error)
	GetBudgetsByUserIDAndCategory(ctx context.Context, arg GetBudgetsByUserIDAndCategoryParams) ([]Budget, error)
	GetIdentitiesByUserID(ctx context.Context, userID int32) ([]Identity, error)
	GetIdentityByProviderAndIdentifier(ctx context.Context, arg GetIdentityByProviderAndIdentifierParams) (Identity, error)
	GetLedgerAmount(ctx context.Context, id int32) (decimal.Decimal, error)
	GetLedgerByID(ctx context.Context, id int32) (GetLedgerByIDRow, error)
	GetLedgersByAccountID(ctx context.Context, accountID int32) ([]GetLedgersByAccountIDRow, error)
	GetLedgersByCategory(ctx context.Context, arg GetLedgersByCategoryParams) ([]GetLedgersByCategoryRow, error)
	GetLedgersByCategoryAndDateRange(ctx context.Context, arg GetLedgersByCategoryAndDateRangeParams) ([]Ledger, error)
	GetLedgersSumByCategoryAndDateRange(ctx context.Context, arg GetLedgersSumByCategoryAndDateRangeParams) (decimal.Decimal, error)
	GetRecurringTransactionByID(ctx context.Context, id int32) (RecurringTransaction, error)
	GetRecurringTransactionsByUserID(ctx context.Context, userID int32) ([]RecurringTransaction, error)
	GetReminderByID(ctx context.Context, id int32) (Reminder, error)
	GetRemindersByRecurringTransactionID(ctx context.Context, recurringTransactionID int32) ([]Reminder, error)
	GetUpcomingReminders(ctx context.Context, arg GetUpcomingRemindersParams) ([]GetUpcomingRemindersRow, error)
	GetUserByID(ctx context.Context, id int32) (User, error)
	GetUserByIdentity(ctx context.Context, arg GetUserByIdentityParams) (GetUserByIdentityRow, error)
	IncreaseAccountBalance(ctx context.Context, arg IncreaseAccountBalanceParams) (Account, error)
	MarkReminderAsRead(ctx context.Context, id int32) (Reminder, error)
	UpdateAccount(ctx context.Context, arg UpdateAccountParams) (Account, error)
	UpdateBankAccount(ctx context.Context, arg UpdateBankAccountParams) (BankAccount, error)
	UpdateBudget(ctx context.Context, arg UpdateBudgetParams) (Budget, error)
	UpdateIdentityCredential(ctx context.Context, arg UpdateIdentityCredentialParams) (Identity, error)
	UpdateIdentityLastUsed(ctx context.Context, arg UpdateIdentityLastUsedParams) (Identity, error)
	UpdateLedger(ctx context.Context, arg UpdateLedgerParams) (Ledger, error)
	UpdateRecurringTransaction(ctx context.Context, arg UpdateRecurringTransactionParams) (RecurringTransaction, error)
	UpdateRecurringTransactionExecution(ctx context.Context, arg UpdateRecurringTransactionExecutionParams) (RecurringTransaction, error)
	UpdateUser(ctx context.Context, arg UpdateUserParams) (User, error)
	VoidLedger(ctx context.Context, id int32) (Ledger, error)
}

var _ Querier = (*Queries)(nil)
