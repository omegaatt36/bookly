// Code generated by go-enum DO NOT EDIT.
// Version: 0.6.0
// Revision: 919e61c0174b91303753ee3898569a01abb32c97
// Build Date: 2023-12-18T15:54:43Z
// Built By: goreleaser

package domain

import (
	"errors"
	"fmt"
)

const (
	// AccountStatusActive is a AccountStatus of type active.
	AccountStatusActive AccountStatus = "active"
	// AccountStatusClosed is a AccountStatus of type closed.
	AccountStatusClosed AccountStatus = "closed"
	// AccountStatusArchived is a AccountStatus of type archived.
	AccountStatusArchived AccountStatus = "archived"
)

var ErrInvalidAccountStatus = errors.New("not a valid AccountStatus")

// String implements the Stringer interface.
func (x AccountStatus) String() string {
	return string(x)
}

// IsValid provides a quick way to determine if the typed value is
// part of the allowed enumerated values
func (x AccountStatus) IsValid() bool {
	_, err := ParseAccountStatus(string(x))
	return err == nil
}

var _AccountStatusValue = map[string]AccountStatus{
	"active":   AccountStatusActive,
	"closed":   AccountStatusClosed,
	"archived": AccountStatusArchived,
}

// ParseAccountStatus attempts to convert a string to a AccountStatus.
func ParseAccountStatus(name string) (AccountStatus, error) {
	if x, ok := _AccountStatusValue[name]; ok {
		return x, nil
	}
	return AccountStatus(""), fmt.Errorf("%s is %w", name, ErrInvalidAccountStatus)
}
